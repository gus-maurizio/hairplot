pipenv install requests

To activate this project's virtualenv, run pipenv shell.
Alternatively, run a command inside the virtualenv with pipenv run.

pipenv run python main.py
virtualenv hairplot
source hairplot/bin/activate
pip3 freeze > requirements.txt
pip3 install -r requirements.txt
deactivate


------------
mkvirtualenv

Basic Usage
Create a virtual environment:
$ mkvirtualenv my_project
This creates the my_project folder inside ~/Envs.

Work on a virtual environment:
$ workon my_project
Alternatively, you can make a project, which creates the virtual environment, and also a project directory inside $WORKON_HOME, which is cd -ed into when you workon myproject.

$ mkproject myproject
virtualenvwrapper provides tab-completion on environment names. It really helps when you have a lot of environments and have trouble remembering their names.

workon also deactivates whatever environment you are currently in, so you can quickly switch between environments.

Deactivating is still the same:
$ deactivate
To delete:
$ rmvirtualenv venv
Other useful commands
lsvirtualenv
List all of the environments.
cdvirtualenv
Navigate into the directory of the currently activated virtual environment, so you can browse its site-packages, for example.
cdsitepackages
Like the above, but directly into site-packages directory.
lssitepackages
Shows contents of site-packages directory.
